{"remainingRequest":"/Users/teimurgasanov/Projects/presentations/react-documentation/node_modules/docz-core/node_modules/babel-loader/lib/index.js?{\"presets\":[[\"/Users/teimurgasanov/Projects/presentations/react-documentation/node_modules/babel-preset-docz/dist/index.js\",{\"flow\":true,\"typescript\":false,\"parseProps\":true}]],\"plugins\":[\"/Users/teimurgasanov/Projects/presentations/react-documentation/node_modules/react-hot-loader/babel.js\"],\"cacheDirectory\":true,\"babelrc\":false}!/Users/teimurgasanov/Projects/presentations/react-documentation/src/components/Button/index.jsx","dependencies":[{"path":"/Users/teimurgasanov/Projects/presentations/react-documentation/src/components/Button/index.jsx","mtime":1537699529977},{"path":"/Users/teimurgasanov/Projects/presentations/react-documentation/node_modules/cache-loader/dist/cjs.js","mtime":1537683773471},{"path":"/Users/teimurgasanov/Projects/presentations/react-documentation/node_modules/docz-core/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var _jsxFileName = \"/Users/teimurgasanov/Projects/presentations/react-documentation/src/components/Button/index.jsx\";\n\n(function () {\n  var enterModule = require('react-hot-loader').enterModule;\n\n  enterModule && enterModule(module);\n})();\n\nimport React from \"react\";\nimport t from \"prop-types\";\nimport defaultTheme from \"../../theme/default\";\nimport StyledButton from \"./index.styles\";\n\nvar Button = function Button(props) {\n  return React.createElement(StyledButton, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }));\n};\n\nexport var buttonPropTypes = {\n  /**\n   * Button type\n   */\n  type: t.oneOf([\"info\", \"warning\", \"danger\", \"primary\"]),\n\n  /**\n   * Styled-components theme\n   */\n  theme: t.shape({\n    colors: t.shape({\n      warning: t.string.isRequired,\n      primary: t.string.isRequired,\n      danger: t.string.isRequired,\n      info: t.string.isRequired\n    }).isRequired\n  })\n};\nButton.propTypes = buttonPropTypes;\nButton.defaultProps = {\n  type: \"primary\",\n  theme: defaultTheme\n};\nvar _default = Button;\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = require('react-hot-loader').default;\n\n  var leaveModule = require('react-hot-loader').leaveModule;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Button, \"Button\", \"/Users/teimurgasanov/Projects/presentations/react-documentation/src/components/Button/index.jsx\");\n  reactHotLoader.register(buttonPropTypes, \"buttonPropTypes\", \"/Users/teimurgasanov/Projects/presentations/react-documentation/src/components/Button/index.jsx\");\n  reactHotLoader.register(_default, \"default\", \"/Users/teimurgasanov/Projects/presentations/react-documentation/src/components/Button/index.jsx\");\n  leaveModule(module);\n})();\n\n;\nButton.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Button\",\n  \"props\": {\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"\\\"primary\\\"\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"\\\"info\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"warning\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"danger\\\"\",\n          \"computed\": false\n        }, {\n          \"value\": \"\\\"primary\\\"\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"Button type\"\n    },\n    \"theme\": {\n      \"defaultValue\": {\n        \"value\": \"defaultTheme\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"colors\": {\n            \"name\": \"shape\",\n            \"value\": {\n              \"warning\": {\n                \"name\": \"string\",\n                \"required\": true\n              },\n              \"primary\": {\n                \"name\": \"string\",\n                \"required\": true\n              },\n              \"danger\": {\n                \"name\": \"string\",\n                \"required\": true\n              },\n              \"info\": {\n                \"name\": \"string\",\n                \"required\": true\n              }\n            },\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"Styled-components theme\"\n    }\n  }\n};",{"version":3,"sources":["/Users/teimurgasanov/Projects/presentations/react-documentation/src/components/Button/index.jsx"],"names":["React","t","defaultTheme","StyledButton","Button","props","buttonPropTypes","type","oneOf","theme","shape","colors","warning","string","isRequired","primary","danger","info","propTypes","defaultProps"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,YAAd;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAI,oBAAC,YAAD,oBAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAJ;AAAA,CAApB;;AAEA,OAAO,IAAMC,eAAe,GAAG;AAC7B;;;AAGAC,EAAAA,IAAI,EAAEN,CAAC,CAACO,KAAF,CAAQ,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,EAA8B,SAA9B,CAAR,CAJuB;;AAK7B;;;AAGAC,EAAAA,KAAK,EAAER,CAAC,CAACS,KAAF,CAAQ;AACbC,IAAAA,MAAM,EAAEV,CAAC,CAACS,KAAF,CAAQ;AACdE,MAAAA,OAAO,EAAEX,CAAC,CAACY,MAAF,CAASC,UADJ;AAEdC,MAAAA,OAAO,EAAEd,CAAC,CAACY,MAAF,CAASC,UAFJ;AAGdE,MAAAA,MAAM,EAAEf,CAAC,CAACY,MAAF,CAASC,UAHH;AAIdG,MAAAA,IAAI,EAAEhB,CAAC,CAACY,MAAF,CAASC;AAJD,KAAR,EAKLA;AANU,GAAR;AARsB,CAAxB;AAkBPV,MAAM,CAACc,SAAP,GAAmBZ,eAAnB;AAEAF,MAAM,CAACe,YAAP,GAAsB;AACpBZ,EAAAA,IAAI,EAAE,SADc;AAEpBE,EAAAA,KAAK,EAAEP;AAFa,CAAtB;eAKeE,M;AAAf;;;;;;;;;;;;0BA3BMA,M;0BAEOE,e","sourcesContent":["import React from \"react\";\nimport t from \"prop-types\";\nimport defaultTheme from \"../../theme/default\";\nimport StyledButton from \"./index.styles\";\n\nconst Button = props => <StyledButton {...props} />;\n\nexport const buttonPropTypes = {\n  /**\n   * Button type\n   */\n  type: t.oneOf([\"info\", \"warning\", \"danger\", \"primary\"]),\n  /**\n   * Styled-components theme\n   */\n  theme: t.shape({\n    colors: t.shape({\n      warning: t.string.isRequired,\n      primary: t.string.isRequired,\n      danger: t.string.isRequired,\n      info: t.string.isRequired\n    }).isRequired,\n  })\n};\n\nButton.propTypes = buttonPropTypes;\n\nButton.defaultProps = {\n  type: \"primary\",\n  theme: defaultTheme\n};\n\nexport default Button;\n"]}]}